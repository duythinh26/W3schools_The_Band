/*Reset CSS đơn giản nhất*/
* {
    padding: 0;
    margin: 0;
    /*Loại bỏ tính toán kích thước khi có border hoặc padding bằng lệnh box-sizing: border-box;*/
    box-sizing: border-box;
}

html {
    /*Thuộc tính font-family set font chữ cho cả website*/
    font-family: Lato, sans-serif;
    /* Thuộc tính scroll-behavior giúp chúng ta tùy chỉnh hành động cuộn */
    scroll-behavior: smooth;
}

/*Nguyên tắc làm việc
1. Từ ngoài vào trong
2. Từ trên xuống dưới
3. Từ tổng quan đến chi tiết
*/

/* Đặt ra những câu hỏi sau để biết mình cần làm gì
1. Vị trí
2. Kích thước (width, height)
3. Màu sắc
4. Kiểu chữ
*/

/* Common css selectors */
.text-white {
    color: #fff !important;
}

/* CSS cho class row và column để tập tư duy hàng cột */
.row {
    margin-left: -8px;
    margin-right: -8px;
}

/* Thay vì tạo class clear để ôm hết các phần tử, chúng ta sử dụng pseudo element để làm điều này trên thực tế */
.row::after {
    content: "";
    display: block;
    clear: both;
}

.col {
    float: left;
    padding: 0 8px;
}

.full-col {
    width: 100%;
}

.double-col {
    width: 50%;
}

.triple-col {
    width: 33.33333%;
}

.text-center {
    text-align: center !important;
}

.btn {
    color: #fff;
    background-color: #000;
    text-decoration: none;
    padding: 12px 16px;
    margin-bottom: 16px;
    display: inline-block;
}

.btn:hover { 
    color: #000;
    background-color: #ccc;
    cursor: pointer;
    border: 2px solid #ccc;
}

/* Main css selectors */
#main {
    /* overflow: hidden; */
}

#nav {
    display: inline-block;
}

#header {
    height: 46px;
    background-color: #000;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    /* Thuộc tính z-index chỉ định độ ưu tiên của một phần tử (lớn hơn đứng trước)
    z-index chỉ hoạt động với những selector có thuộc tính position
    Nếu hai phần tử có chứa thuộc tính position nằm chồng lên nhau mà ko sử dụng z-index, 
    thuộc tính position nào nằm ở dòng code có số lớn hơn sẽ được ưu tiên */
    z-index: 1;
}

#nav, .subnav {
    /*CSS list-style-type chỉ định kiểu của danh sách (thẻ ul, ol và li)
    Mặc định của list-style-type là một dấu chấm*/
    list-style-type: none;
}

#nav > li {
    display: inline-block;
}

#nav li {
    position: relative;
}

/*Selector này có nghĩa là thẻ a phải là thẻ con trực tiếp (thẻ con cấp 1) của thẻ li, 
và thẻ li phải là thẻ con trực tiếp của id="nav" thì mới được tính*/
#nav > li > a {
    color: #fff;
    /* Thuộc tính text-transform chỉnh sửa chữ hoa hoặc chữ thường */
    text-transform: uppercase;
}

/*Selector này có nghĩa là thẻ a phải là thẻ con (cấp mấy cũng đc) của thẻ li, 
và thẻ li phải là thẻ con của id="nav" thì mới được tính*/
#nav li a {
    /*Mặc định là chữ nằm giữa đường bao phủ nó, sử dụng thuộc tính line-height = đúng chiều cao header để áp dụng quy tắc đó giúp căn giữa chữ*/
    line-height: 46px;
    padding: 0 20px;
    /*Sử dụng thuộc tính display: inline-block để thẻ a ăn theo line-height*/
    display: block;
    /*Tính chất của block kế thừa chiều ngang của thẻ chứa nó*/
    text-decoration: none;
    /* Thuộc tính text-decoration giúp chỉnh gạch chân, in nghiêng chữ, ... */
    font-size: 15px;
}

/*Nếu :hover vào thẻ a thì khi di chuột vào thẻ a đó và xuất hiện menu subnav 
sẽ mất hiệu ứng :hover của thẻ a, nên chúng ta :hover vào thẻ li*/
#nav > li:hover > a,
#nav .subnav li:hover a {
    color: #000;
    background-color: #ccc;
}
/*CSS cho .subnav là con của li và li là con của #nav khi hover đúng thẻ li*/
#nav li:hover .subnav {
    /*khi hover vào thẻ li đc chọn sẽ đè thuộc tính display: none của 
    css selector #nav .subnav*/
    display: block;
}

#nav .subnav {
    display: none;
    min-width: 160px;
    position: absolute;
    /*Thêm top: 100% và left: 0 để chắc chắn thẻ con của thẻ more sẽ nằm đúng vị trí của nó*/
    top: 100%;
    left: 0;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}

#nav .subnav a {
    color: #000;
    padding: 8px 16px;
    line-height: 22px;
}

#nav .nav-arrow-down {
    font-size: 14px;
}

#header .mobile-menu-btn, 
#header .search-button {
    /* Thuộc tính float: right kéo phần tử sang bên phải. 
    Khi thẻ div dù có tính chất khối bị thêm thuộc tính float thì vẫn mất tính chất khối của nó */
    float: right;
    padding: 0 21px;
}

#header .menu-icon, 
#header .search-icon {
    color: #fff;
    line-height: 46px;
    cursor: pointer;
}

#header .search-button:hover {
    cursor: pointer;
    background-color: #f44336;
}

#header .mobile-menu-btn:hover {
    background-color: #ccc;
}

/* Dòng phía dưới có nghĩa là khi hover vào class mobile-menu-btn, css lại class menu-icon */
#header .mobile-menu-btn:hover .menu-icon{
    color: #000;
}

#slider {
    /*Dùng margin-top để kéo phần slider xuống đứng dưới phần header.
    Nếu không có margin-top, phần header sẽ đè lên phần slider
    46px ở đây là line-height của header*/
    margin-top: 46px;
    /* 50% ở đây là 50% chiều ngang của chính nó */
    padding-top: 50%;
    background: url('/assets/img/slider/chicago.jpg') top center / cover no-repeat;
    /* Thuộc tính background phía trên hiện tại đang viết gộp lại từ nhiều thuộc tính khác.
    Chúng ta có thể viết rời ra như sau:
    background-image: url('/Project/W3_the_band/assets/img/slider/chicago.jpg');
    background-position: top center;
    background-size: cover;
    background-repeat: no-repeat;
    */
    /* Thuộc tính position này tương tác với thuộc tính position của #slider .text-content */
    position: relative;
}

#slider .text-content {
    position: absolute;
    bottom: 48px;
    color: #fff;
    text-align: center;
    /* Cách căn giữa thứ nhất: */
    /* left: 50%;
    transform: translateX(-50%); */
    /* Cách căn giữa thứ hai: */
    /* left: 0;
    right: 0; */
    /* Cách căn giữa thứ ba: */
    width: 100%;
    /* Ở đây chúng ta xài cách thứ ba vì nó đơn giản */
}

#slider .text-heading {
    font-weight: 500;
    font-size: 24px;
}

#slider .text-description {
    font-size: 15px;
    margin-top: 25px;

}

#content {
    height: 2000px;
    /* background-color: #ccc; */
}

#content .content-section {
    width: 800px;
    /* max-width: 100%; kèm padding left và right 16px giúp cho content được dính sát vào màn hình trên tablet,
    đồng thời cách lề trái phải = 16px thay vì bị lỗi */
    max-width: 100%;
    padding: 64px 16px 112px;
    /* Margin sang trái và sang phải 1 khoảng bằng auto sẽ đẩy phần được margin ra giữa */
    margin-left: auto;
    margin-right: auto;
}

#content .heading-section {
    font-size: 30px;
    font-weight: 300;
    /* letter-spacing dùng để tăng độ dài khoảng cách giữa các chữ cái */
    letter-spacing: 4px;
    margin: 10px 0;
    text-align: center;
}

#content .section-sub-heading {
    font-size: 15px;
    font-style: italic;
    opacity: 0.5;
    margin: 16px;
    text-align: center;
}

#content .about-txt {
    font-size: 15px;
    margin: 16px 0;
    /* text-align: justify; giúp cho căn chỉnh 2 lề trái phải bằng nhau */
    text-align: justify;
    /* line-height dùng để chỉnh độ cao của dòng. Tiếng Anh thì thường là 1.4, tiếng Việt là 1.6*/
    line-height: 1.4;
}

#content .member-list {
    padding: 32px 0;
    /* Vì khi dùng float cho các thẻ con (ở đây là cho class team-member, thẻ div có class member-list bị văng ra và ko ôm hết toàn bộ thẻ con
    Do đó, chúng ta sử dụng thuộc tính overflow: hidden để thẻ div có class member-list ôm hết toàn bộ các thẻ con team-member */
    overflow: hidden;
}

/* Ngoài việc sử dụng overflow để giải quyết vấn đề do float gây ra, chúng ta có thể tạo 1 thẻ div mới là con của thẻ div có class member-list,
nằm dưới các class con team-member và dùng thuộc tính clear: both */
.clear {
    clear: both;
}

#content .name {
    font-size: 15px;
    margin: 16px 0;
}

#content .member-img {
    width: 154px;
    border-radius: 4px;
}

#content .tour-section {
    background-color: #000;
}

#content .ticket-list {
    margin: 40px 0;
    background-color: #fff;
}

#content .ticket {
    list-style-type: none;
}

#content .ticket li {
    color: #757575;
    font-size: 15px;
    padding: 12px 16px;
    border-bottom: 1px solid #ddd;
}

#content .sold-out {
    color: #fff;
    background-color: #f44336;
    padding: 4px 8px;
    margin-left: 16px;
}

#content .ticket-quantity {
    color: #fff;
    background-color: #000;
    float: right;
    margin-right: 16px;
    border-radius: 50%;
    padding: 0 6px;
}

#content .place-list {
    /* Kỹ thuật padding kèm margin giá trị âm để kéo mép phần place-list bằng với phần content của web */
    padding-top: 32px;
}

#content .place-section {
    /* width: 33.33333%; giúp cho 3 hình ảnh đứng cùng một hàng vì 3 ảnh cộng lại = 100% */
    width: 33.33333%;
}

#content .tour-img {
    /* Vì chiều ngang của thẻ img lớn hơn chiều ngang của .place-section phía trên, nên ta sử dụng width: 100%; 
    để kéo ảnh nằm gọn bên trong .place-section */
    width: 100%;
    /* Nếu không sử dụng display: block; ở đây sẽ làm cho giữa ảnh và phần nội dung phía dưới ảnh có một đường màu đen chen ngang */
    display: block;
}

#content .tour-img:hover {
    opacity: 0.6;
}

#content .tour-text {
    font-size: 15px;
    background-color: #fff;
    padding: 0 16px;
}

#content .tour-heading {
    font-size: 15px;
    font-weight: 600;
    padding-top: 16px;
}

#content .tour-date,
#content .tour-description {
    margin: 16px 0;
}

#content .tour-date {
    opacity: 0.6;
}

#content .tour-description {
    line-height: 1.4;
}

#content .buy-ticket-button {
    color: #fff;
    background-color: #000;
    text-decoration: none;
    padding: 12px 16px;
    display: inline-block;
    margin-bottom: 16px;
    /* Một thẻ inline (thẻ a) đang nằm dưới một thẻ block (thẻ p) nên nếu không sử dụng display: inline-block;
    sẽ làm cho các thuộc tính margin và padding trở nên vô hiệu lực */
}   

#content .buy-ticket-button:hover {
    color: #000;
    background-color: #ccc;
    cursor: pointer;
    border: 2px solid #ccc;
}

#content .contact-content {
    padding: 32px 0;
}

#content .contact-info {
    font-size: 18px;
    line-height: 1.5;
}
/* Nên đặt width cho icon thay vì đặt padding hay margin để đảm bảo kích thước giữa icon và chữ vẫn bằng nhau */
#content .contact-info p i {
    width: 30px;
    /* Khi set width: 30px; mà không có display: inline-block; cho selector này thì width: 30px; sẽ không hoạt động */
    display: inline-block;
}

#contact-form {
    font-size: 15px;
}

.contact-form .form-control {
    padding: 8px;
    margin: 4px;
    border: 1px solid #ccc;
    width: 100%;
}

.contact-form .form-submit {
    font-size: 15px;
    color: #fff;
    background-color: #000;
    padding: 8px 12px;
    margin: 16px -4px 16px 0px;
    float: right;
}

.contact-form .form-submit:hover {
    color: #000;
    background-color: #ccc;
    padding: 10px 15px;
    border: none;
    cursor: pointer;
}

.map-section img {
    width: 100%;
}

#footer {
    padding: 64px 16px;
    background-color: #f1f1f1;
    text-align: center;
}

#footer .social-list {
    font-size: 20px;
}

#footer .social-list a {
    color: #000;
    text-decoration: none;
}

#footer .social-list a:hover {
    opacity: 0.5;
}

#footer .copy-right {
    font-size: 15px;
    margin: 15px;
    color: #000;
    opacity: 0.5;
}

.modal {
    position: fixed;
    /* Bốn thuộc tính top, bottom, left và right phía dưới kết hợp với position: fixed; phía trên dùng để tạo ra modal */
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    /* Dùng thuộc tính background-color: rgba(0, 0, 0, 0.4); để tạo ra lớp overlay khi mở phần modal lên */
    background-color: rgba(0, 0, 0, 0.4);
    /* Kỹ thuật flexbox:
    Để class modal-container nằm giữa class cha modal thì chúng ta biến class modal thành giao diện display flex bằng cách thêm thuộc tính display: flex; */
    display: none;
    /* Dùng thuộc tính align-items: center; vào class cha modal để class modal-container nằm giữa chiều cao class cha modal */
    align-items: center;
    /* Dùng thuộc tính justify-content: center; vào class cha modal để class modal-container nằm giữa chiều ngang class cha modal */
    justify-content: center;

    /* Resonsive cho modal */
    max-width: calc(100% - 32px);
}

.modal.open {
    display: flex;
}

.modal .modal-container {
    background-color: #fff;
    width: 900px;
    /* Không cần đặt height cứng vì có thể sẽ phát triển thêm nội dung dẫn đến height bị tăng */
    min-height: 200px;
    position: relative;
    /* Thuộc tính animation giúp chúng ta sử dụng được keyframes */
    animation: modalFaceIn ease 0.5s;
}

.modal .modal-close {
    color: #fff;
    height: 52px;
    position: absolute;
    right: 0;
    top: 0;
    /* Padding ở đây giúp căn giữa nút close theo cả 4 hướng */
    padding: 16px;
}

.modal .modal-close:hover {
    color: #000;
    background-color: #ccc;
    cursor: pointer;
}

.modal .modal-header {
    font-size: 30px;
    height: 130px;
    color: #fff;
    background-color: #009688;
    padding: 32px 16px;
    /* Kỹ thuật flex dùng để căn giữa đã được áp dụng phía trên */
    display: flex;
    align-items: center;
    justify-content: center;
}

.modal .modal-body {
    /* Hầu hết mọi trường hợp phần body đều có padding trái phải nhằm tránh dính các chữ hay chi tiết vào viền */
    padding: 0 16px;
}

.modal .modal-label {
    /* Thêm thuộc tính display: block; để giúp cho label và input nằm trên các hàng riêng biệt nhờ tính chất block */
    display: block;
    font-size: 15px;
    margin: 24px 0 12px; 
}

.modal .modal-input {
    padding: 8px;
    width: 100%;
    border: 1px solid #ccc;
}

.modal #buy-ticket {
    width: 100%;
    background-color: #009688;
    color: #fff;
    padding: 16px;
    margin: 16px 0;
    border: 0;
    text-transform: uppercase;
}

.modal #buy-ticket:hover {
    color: #000;
    background-color: #ccc;
    cursor: pointer;
}

.modal .modal-footer {
    text-align: right;
    margin: 16px 0;
}

.modal .modal-help {
    padding: 0 16px;
}

.modal .modal-help a {
    color: #2196F3;
}

/* Muốn khi bấm vào nút buy tickets thì modal cuộn từ trên xuống, chúng ta dùng keyframe
Keyframe giúp tạo ra chuyển động liên tiếp những hình ảnh tĩnh để tạo ra hoạt họa (giống cơ chế chiếu phim 24 hình/s) */
@keyframes modalFaceIn {
    from {
        /* Điểm bắt đầu cuộn */
        transform: translateY(-150px);
        opacity: 0;
    }
    to {
        /* Điểm kết thúc sẽ là ở giữa màn hình (điểm ban đầu khi chúng ta css cho phần modal */
        transform: translateY(0);
        opacity: 1;
    }
}